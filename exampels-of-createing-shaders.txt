bezier2D = {
	{
		{"bezier3d_vert.glsl", "VERTEX", GL_VERTEX_SHADER} , // shader location, compile meg, shader type
		{"bezier3d_frag.glsl", "FRAGMENT", GL_FRAGMENT_SHADER} ,
		{"bezier2d_tc.glsl", "TESELATION_CONTROL", GL_TESS_CONTROL_SHADER},
		{"bezier2d_te.glsl", "TESELATION_CONTROL", GL_TESS_EVALUATION_SHADER}
	}
	};

	bezier3D = {
	{
		{"bezier3d_vert.glsl", "VERTEX", GL_VERTEX_SHADER} ,
		{"bezier3d_frag.glsl", "FRAGMENT", GL_FRAGMENT_SHADER} ,
		{"bezier3d_tc.glsl", "TESELATION_CONTROL", GL_TESS_CONTROL_SHADER},
		{"bezier3d_te.glsl", "TESELATION_CONTROL", GL_TESS_EVALUATION_SHADER}
	}
	};

	bezierCurve = { "bezierCurve_vert.glsl", "bezierCurve_frag.glsl" };

	cursor = { "cursor_vert.glsl", "cursor_frag.glsl" };

	defaultShader = { "default.vert", "default.frag" };

	point = { "point_vert.glsl", "point_frag.glsl" };

	infinityGrid = { "infinityGrid_vert.glsl", "infinityGrid_frag.glsl" };

	Torus = {
	{
		{"simple_vert.glsl", "VERTEX", GL_VERTEX_SHADER} ,
		{"simple_frag.glsl", "FRAGMENT", GL_FRAGMENT_SHADER}
	}
	};
